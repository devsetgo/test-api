{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"CI/CD Pipeline: SonarCloud: Test-API a FASTAPI Example \u00b6 A test/psuedo API to use as sample data or test data. Inspired by FakeResponse.com . Documentation can be found at devsetgo.com/projects/test-api . Note \u00b6 This requires a *Nix environment to run. (Linux, Unix, Windows 10 WSL (unbuntu tested) and I think Mac OS (I don't use a Mac) ~~This should be just consider a beta version api at this time.~~ Create Environment \u00b6 Copy the repo ~~~~ git clone https://github.com/devsetgo/test-api.git python3.7 -m venv env source env/bin/activate cd app ~~~~ Notes: Libraries require Python 3.6 or 3.7 Note: I am using Ubuntu via WSL Upgrading (adding) Python 3.7 to Ubuntu and setting it as the default for Python3 Upgrading Python3 and install venv You may need to upgrade pip and setuptools first (pip3 install --upgrade pip setuptools) Install requirements ~~~~ Production: pip3 install -r requirements.txt Development: pip3 install -r requirements/dev.txt ~~~~ Setup: Copy .env_sample to .env and set configuration as desired. $ cp .env_example .env .env_sample file # # This is used to determin if .env or other external config is used. True is for a .env file and false for docker enviroment # # option: dotenv, docker USE_ENV='dotenv' # Application information TITLE=\"Test API\" DESCRIPTION=\"Test APIs for tools and other examples\" APP_VERSION='One' OWNER='Your Name' WEBSITE='https://your.domain.com/support' # Demo settings CREATE_SAMPLE_DATA=true NUMBER_TASKS=10 NUMBER_USERS=10 NUMBER_GROUPS=10 # Cofigurations HOST_DOMAIN='https://your.domain.com' #prd for production or 'dev' for development RELEASE_ENV='dev' # Turn HTTPS Middleware on (True) or off (False) HTTPS_ON=false # Turn on Prometheus endpoint PROMETHEUS_ON=true # Add default group ADD_DEFAULT_GROUP=true # data base URI SQLALCHEMY_DATABASE_URI='sqlite:///sqlite_db/api.db' # Loguru settings LOGURU_RETENTION='10 days' LOGURU_ROTATION='100 MB' # Values NOTSET, DEBUG, INFO, WARNING, ERROR, CRITICAL LOGURU_LOGGING_LEVEL='DEBUG' # Workers - Set to 1 for CPUs x 2 + 1 WORKERS=4 # Leave intact for license CREATED_BY='Mike Ryan' LICENSE_TYPE='MIT' LICENSE_LINK='https://github.com/devsetgo/test-api/blob/master/LICENSE' Start the app UVICORN Development: uvicorn main:app --port 5000 --reload python3 main.py (running Uvicorn from Code - no reload) Production: uvicorn main:app --port 5000 --workers 2 python3 main.py (running Uvicorn from code) gunicorn -c gunicorn_cfg.py main:app # Note: gunicorn is the config for the dockerfile Docker Docker: docker pull mikeryan56/test-api:latest Run Tests By commands python3 -m pytest Create coverage badge coverage-badge -o coverage.svg -f As a Script from src directory ./scripts/tests.sh Pre-Commit & Hooks - Follow install instructionsL: https://pre-commit.com/#install - pre-commit install - pre-commit run -a Features \u00b6 default [x] GET / (root) Forward to OpenAPI to /docs [x] GET /Information endpoint containing basic app info [x] GET /joke PyJoke list todos [x] GET /api/v1/todo/list [x] GET /api/v1/todo/list/count [x] GET /api/v1/todo/list/{todo_id} [x] DELETE /api/v1/todo/list/{todo_id} [x] PUT /api/v1/todo/list/{todo_id} [x] POST /api/v1/todo/create/ users [x] GET /api/v1/users/list [x] GET /api/v1/users/list/count [x] GET /api/v1/users/list/{user_id} [x] DELETE /api/v1/users/list/{user_id} [x] PUT /api/v1/users/list/{user_id} [x] POST /api/v1/users/create/ [x] POST /api/v1/users/check-pwd/ tools [x] POST /api/v1/tools/convert-to/xml [x] POST /api/v1/tools/convert-to/json silly users [x] GET /api/v1/silly-users/make-one [x] GET /api/v1/silly-users/list health [x] GET /api/health/ [x] GET /api/health/system-info [x] GET /api/health/processes Issues/Bugs \u00b6 [ ] None TODO \u00b6 [X] Setup CI/CD Pipeline for test and deployment ~~[X] Travis-CI ~~ replaced by Github Actions [X] SonarCloud [x] Github Actions found in .github/workflow/actions [x] tests - matrix run of Python 3.6 and 3.7 [x] CodeCove.io upload [x] docker-rc - docker build and push when pull request approved for release-candidate branch (calendar version - rc) [x] docker-master - docker build and push when pull request approved for master branch (calender version and latest) [x] ensure docker build only happens after pull_request approved and merged into higher branch [x] Make Twelve Factor App ready Application - [x] Refactor by endpoint (sample, user, etc..) - [x] Create tests - [x] Minimum of 80% - [x] Exception Testing - [x] Extend API parameters for Users - [x] Pagination - [x] Number of Items per list returned (Max) - [x] Additional Optional for filtering - [ ] Extend API parameters for ToDo - [ ] Pagination - [ ] Number of Items per list returned (Max) - [ ] Additional Optional for filtering - [ ] Extend Tools API - [ ] Text Conversion - [x] XML to JSON (required to be valid XML) - [ ] JSON to XML (required to be valid XML) - [ ] Text Functions - [ ] Language of text [x] Better organization [x] Standardize API pattern for versioning Access Controls [ ] Add Access controls and signup [ ] Add JWT/Token access [ ] Rate limiting [X] Gunicorn with Uvicorn configuration [x] Logging (using Loguru ) [ ] Build a cookiecutter template for future projects similar to the FastAPI example [ ] Add code comments [ ] Work on one to many relationshipts [ ] Validate userId in ToDo's [ ] Work on Connection Pool for SQLite and Postgres for scaling Docker [X] Docker-Compose example Configuraton for Traefik (default) and Jwilder/Nginx-Proxy & JrCs/docker-letsencrypt-nginx-proxy-companion Tutorials/Documentation [ ] Basic Overview [ ] Explantion of functions","title":"Introduction"},{"location":"#test-api-a-fastapi-example","text":"A test/psuedo API to use as sample data or test data. Inspired by FakeResponse.com . Documentation can be found at devsetgo.com/projects/test-api .","title":"Test-API a FASTAPI Example"},{"location":"#note","text":"This requires a *Nix environment to run. (Linux, Unix, Windows 10 WSL (unbuntu tested) and I think Mac OS (I don't use a Mac) ~~This should be just consider a beta version api at this time.~~","title":"Note"},{"location":"#create-environment","text":"Copy the repo ~~~~ git clone https://github.com/devsetgo/test-api.git python3.7 -m venv env source env/bin/activate cd app ~~~~ Notes: Libraries require Python 3.6 or 3.7 Note: I am using Ubuntu via WSL Upgrading (adding) Python 3.7 to Ubuntu and setting it as the default for Python3 Upgrading Python3 and install venv You may need to upgrade pip and setuptools first (pip3 install --upgrade pip setuptools) Install requirements ~~~~ Production: pip3 install -r requirements.txt Development: pip3 install -r requirements/dev.txt ~~~~ Setup: Copy .env_sample to .env and set configuration as desired. $ cp .env_example .env .env_sample file # # This is used to determin if .env or other external config is used. True is for a .env file and false for docker enviroment # # option: dotenv, docker USE_ENV='dotenv' # Application information TITLE=\"Test API\" DESCRIPTION=\"Test APIs for tools and other examples\" APP_VERSION='One' OWNER='Your Name' WEBSITE='https://your.domain.com/support' # Demo settings CREATE_SAMPLE_DATA=true NUMBER_TASKS=10 NUMBER_USERS=10 NUMBER_GROUPS=10 # Cofigurations HOST_DOMAIN='https://your.domain.com' #prd for production or 'dev' for development RELEASE_ENV='dev' # Turn HTTPS Middleware on (True) or off (False) HTTPS_ON=false # Turn on Prometheus endpoint PROMETHEUS_ON=true # Add default group ADD_DEFAULT_GROUP=true # data base URI SQLALCHEMY_DATABASE_URI='sqlite:///sqlite_db/api.db' # Loguru settings LOGURU_RETENTION='10 days' LOGURU_ROTATION='100 MB' # Values NOTSET, DEBUG, INFO, WARNING, ERROR, CRITICAL LOGURU_LOGGING_LEVEL='DEBUG' # Workers - Set to 1 for CPUs x 2 + 1 WORKERS=4 # Leave intact for license CREATED_BY='Mike Ryan' LICENSE_TYPE='MIT' LICENSE_LINK='https://github.com/devsetgo/test-api/blob/master/LICENSE' Start the app UVICORN Development: uvicorn main:app --port 5000 --reload python3 main.py (running Uvicorn from Code - no reload) Production: uvicorn main:app --port 5000 --workers 2 python3 main.py (running Uvicorn from code) gunicorn -c gunicorn_cfg.py main:app # Note: gunicorn is the config for the dockerfile Docker Docker: docker pull mikeryan56/test-api:latest Run Tests By commands python3 -m pytest Create coverage badge coverage-badge -o coverage.svg -f As a Script from src directory ./scripts/tests.sh Pre-Commit & Hooks - Follow install instructionsL: https://pre-commit.com/#install - pre-commit install - pre-commit run -a","title":"Create Environment"},{"location":"#features","text":"default [x] GET / (root) Forward to OpenAPI to /docs [x] GET /Information endpoint containing basic app info [x] GET /joke PyJoke list todos [x] GET /api/v1/todo/list [x] GET /api/v1/todo/list/count [x] GET /api/v1/todo/list/{todo_id} [x] DELETE /api/v1/todo/list/{todo_id} [x] PUT /api/v1/todo/list/{todo_id} [x] POST /api/v1/todo/create/ users [x] GET /api/v1/users/list [x] GET /api/v1/users/list/count [x] GET /api/v1/users/list/{user_id} [x] DELETE /api/v1/users/list/{user_id} [x] PUT /api/v1/users/list/{user_id} [x] POST /api/v1/users/create/ [x] POST /api/v1/users/check-pwd/ tools [x] POST /api/v1/tools/convert-to/xml [x] POST /api/v1/tools/convert-to/json silly users [x] GET /api/v1/silly-users/make-one [x] GET /api/v1/silly-users/list health [x] GET /api/health/ [x] GET /api/health/system-info [x] GET /api/health/processes","title":"Features"},{"location":"#issuesbugs","text":"[ ] None","title":"Issues/Bugs"},{"location":"#todo","text":"[X] Setup CI/CD Pipeline for test and deployment ~~[X] Travis-CI ~~ replaced by Github Actions [X] SonarCloud [x] Github Actions found in .github/workflow/actions [x] tests - matrix run of Python 3.6 and 3.7 [x] CodeCove.io upload [x] docker-rc - docker build and push when pull request approved for release-candidate branch (calendar version - rc) [x] docker-master - docker build and push when pull request approved for master branch (calender version and latest) [x] ensure docker build only happens after pull_request approved and merged into higher branch [x] Make Twelve Factor App ready Application - [x] Refactor by endpoint (sample, user, etc..) - [x] Create tests - [x] Minimum of 80% - [x] Exception Testing - [x] Extend API parameters for Users - [x] Pagination - [x] Number of Items per list returned (Max) - [x] Additional Optional for filtering - [ ] Extend API parameters for ToDo - [ ] Pagination - [ ] Number of Items per list returned (Max) - [ ] Additional Optional for filtering - [ ] Extend Tools API - [ ] Text Conversion - [x] XML to JSON (required to be valid XML) - [ ] JSON to XML (required to be valid XML) - [ ] Text Functions - [ ] Language of text [x] Better organization [x] Standardize API pattern for versioning Access Controls [ ] Add Access controls and signup [ ] Add JWT/Token access [ ] Rate limiting [X] Gunicorn with Uvicorn configuration [x] Logging (using Loguru ) [ ] Build a cookiecutter template for future projects similar to the FastAPI example [ ] Add code comments [ ] Work on one to many relationshipts [ ] Validate userId in ToDo's [ ] Work on Connection Pool for SQLite and Postgres for scaling Docker [X] Docker-Compose example Configuraton for Traefik (default) and Jwilder/Nginx-Proxy & JrCs/docker-letsencrypt-nginx-proxy-companion Tutorials/Documentation [ ] Basic Overview [ ] Explantion of functions","title":"TODO"},{"location":"contribute/","text":"Contributing \u00b6 Please feel to contribute to this project. Adding common functions is the intent and if you have one to add or improve an existing it is greatly appreciated. Ways to Contribute! \u00b6 Add or improve a function Add or improve documentation Add or improve Tests Report or fix a bug","title":"Contributing"},{"location":"contribute/#contributing","text":"Please feel to contribute to this project. Adding common functions is the intent and if you have one to add or improve an existing it is greatly appreciated.","title":"Contributing"},{"location":"contribute/#ways-to-contribute","text":"Add or improve a function Add or improve documentation Add or improve Tests Report or fix a bug","title":"Ways to Contribute!"},{"location":"delete/","text":"This is to be deleted test 2 test 3 test 4 test 5 test 6","title":"Delete"},{"location":"release-notes/","text":"Release Notes \u00b6 Bump alembic from 1.5.6 to 1.5.7 in /src/requirements. PR #200 by @dependabot[bot] . Bump orjson from 3.5.0 to 3.5.1 in /src/requirements. PR #201 by @dependabot[bot] . Bump pre-commit from 2.10.1 to 2.11.1 in /src/requirements. PR #202 by @dependabot[bot] . Bump coverage from 5.4 to 5.5 in /src/requirements. PR #198 by @dependabot[bot] . Bump alembic from 1.5.5 to 1.5.6 in /src/requirements. PR #197 by @dependabot[bot] . Bump pylint from 2.7.1 to 2.7.2 in /src/requirements. PR #199 by @dependabot[bot] . working on code coverage setting. PR #196 by @devsetgo . change of branch to main. PR #195 by @devsetgo . Working on SonarCloud configuration. PR #194 by @devsetgo . sonarcloud updates. PR #193 by @devsetgo . Cleanup of SonarCloud Issues. PR #192 by @devsetgo . updates for code coverage. PR #191 by @devsetgo . Refactoring layout. PR #190 by @devsetgo . Bump fastapi-login from 1.5.2 to 1.5.3 in /app/requirements. PR #187 by @dependabot[bot] . Bump pylint from 2.6.0 to 2.6.2 in /app/requirements. PR #188 by @dependabot[bot] . Bump asyncpg from 0.21.0 to 0.22.0 in /app/requirements. PR #186 by @dependabot[bot] . fix of symlink. PR #185 by @devsetgo . working on docker image push. PR #184 by @devsetgo . Bump orjson from 3.4.7 to 3.4.8 in /app/requirements. PR #181 by @dependabot[bot] . Bump pre-commit from 2.10.0 to 2.10.1 in /app/requirements. PR #182 by @dependabot[bot] . Bump autopep8 from 1.5.4 to 1.5.5 in /app/requirements. PR #183 by @dependabot[bot] . Updating GIthub actions to Ubuntu latest. PR #180 by @devsetgo . Bump sqlalchemy from 1.3.22 to 1.3.23 in /app/requirements. PR #178 by @dependabot[bot] . Bump sqlalchemy from 1.3.19 to 1.3.20 in /app/requirements. PR #121 by @dependabot[bot] . Dev. PR #125 by @devsetgo . testing latest changes action after bug fix by owner.. PR #124 by @devsetgo .","title":"Release Notes"},{"location":"release-notes/#release-notes","text":"Bump alembic from 1.5.6 to 1.5.7 in /src/requirements. PR #200 by @dependabot[bot] . Bump orjson from 3.5.0 to 3.5.1 in /src/requirements. PR #201 by @dependabot[bot] . Bump pre-commit from 2.10.1 to 2.11.1 in /src/requirements. PR #202 by @dependabot[bot] . Bump coverage from 5.4 to 5.5 in /src/requirements. PR #198 by @dependabot[bot] . Bump alembic from 1.5.5 to 1.5.6 in /src/requirements. PR #197 by @dependabot[bot] . Bump pylint from 2.7.1 to 2.7.2 in /src/requirements. PR #199 by @dependabot[bot] . working on code coverage setting. PR #196 by @devsetgo . change of branch to main. PR #195 by @devsetgo . Working on SonarCloud configuration. PR #194 by @devsetgo . sonarcloud updates. PR #193 by @devsetgo . Cleanup of SonarCloud Issues. PR #192 by @devsetgo . updates for code coverage. PR #191 by @devsetgo . Refactoring layout. PR #190 by @devsetgo . Bump fastapi-login from 1.5.2 to 1.5.3 in /app/requirements. PR #187 by @dependabot[bot] . Bump pylint from 2.6.0 to 2.6.2 in /app/requirements. PR #188 by @dependabot[bot] . Bump asyncpg from 0.21.0 to 0.22.0 in /app/requirements. PR #186 by @dependabot[bot] . fix of symlink. PR #185 by @devsetgo . working on docker image push. PR #184 by @devsetgo . Bump orjson from 3.4.7 to 3.4.8 in /app/requirements. PR #181 by @dependabot[bot] . Bump pre-commit from 2.10.0 to 2.10.1 in /app/requirements. PR #182 by @dependabot[bot] . Bump autopep8 from 1.5.4 to 1.5.5 in /app/requirements. PR #183 by @dependabot[bot] . Updating GIthub actions to Ubuntu latest. PR #180 by @devsetgo . Bump sqlalchemy from 1.3.22 to 1.3.23 in /app/requirements. PR #178 by @dependabot[bot] . Bump sqlalchemy from 1.3.19 to 1.3.20 in /app/requirements. PR #121 by @dependabot[bot] . Dev. PR #125 by @devsetgo . testing latest changes action after bug fix by owner.. PR #124 by @devsetgo .","title":"Release Notes"}]}