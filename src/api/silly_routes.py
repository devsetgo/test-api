# -*- coding: utf-8 -*-
import asyncio
import time

from fastapi import APIRouter, Query
from loguru import logger

from core.gen_user import user_test_info

router = APIRouter()


@router.get("/make-one", tags=["silly users"])
async def make_user() -> dict:
    """
    GET one random generate user

    Keyword Arguments:


    Returns:
        dict -- [description] random generation of user data
    """
    t0 = time.time()

    t1: float = time.time() - t0
    response = {
        "delay_timer": f"{t1:.8f}",
        "user_info": user_test_info(),
    }
    logger.info(f"process time: {t1:.8f}")
    return response


@router.get("/list", tags=["silly users"])
async def user_list(
    qty: int = Query(
        ..., title="silly list", description="(max 50)", ge=1, le=50, alias="qty"
    ),
) -> dict:
    """
    GET List of users generated by Silly (https://github.com/classam/silly)
    Keyword Arguments:
        qty {int} -- [description] minimum of 1 and maximum of 50


    Returns:
        dict -- [description] random generation of user data
    """
    t0 = time.time()
    result = []

    for _ in range(qty):
        x = user_test_info()
        result.append(x)

    t1: float = time.time() - t0
    response = {"delay_timer": f"{t1:.8f}", "user_info": result}
    logger.info(f"process time: {t1:.8f}")
    return response
