version: '3'
# networks:
#   web:
#     external: true

services:
  test-api:
    # build: ./app
    # image: mikeryan56/test-api:2020-12-12-python38-rc
    image: mikeryan56/test-api:latest
    ports:
    - "5000"
    volumes:
    - .:/code
    environment:
      # This is used to determin if .env or other external config is used. True is for a .env file and false for docker enviroment
      # option: dotenv, docker
      USE_ENV: 'docker'
      # Application information
      TITLE: 'Test API'
      DESCRIPTION: 'Checklist APIs'
      APP_VERSION: '20.12.26'
      OWNER: 'Your Name'
      WEBSITE: https://your.domain.com/support
      # Demo settings
      CREATE_SAMPLE_DATA: 'True'
      NUMBER_TASKS: 100
      NUMBER_USERS: 100
      NUMBER_GROUPS: 100
      # Cofigurations
      HOST_DOMAIN: 'https://your.domain.com'
      #prd for production or dev for development
      RELEASE_ENV: 'prd'
      # Turn HTTPS Middleware on (True) or off (False)
      HTTPS_ON: 'False'
      PROMETHEUS_ON: 'True'
      ADD_DEFAULT_GROUP: 'True'
      SQLALCHEMY_DATABASE_URI: 'sqlite:///sqlite_db/api.db'
      # Loguru settings
      LOGURU_RETENTION: '10 days'
      LOGURU_ROTATION: '100 MB'
      LOGURU_LOGGING_LEVEL: 'DEBUG'
      # Workers - Set to 1 for CPUs x 2 + 1
      WORKERS: 4
      # Leave intact for license
      CREATED_BY: 'Mike Ryan'
      LICENSE_TYPE: 'MIT'
      LICENSE_LINK: https://github.com/devsetgo/test-api/blob/master/LICENSE

    #if using traefik
    labels:
    - "traefik.enable=true" # <== Enable traefik to proxy this container
    - "traefik.http.routers.ta-web.rule=Host(`test-api.devsetgo.com`)" # <== Your Domain Name goes here for the http rule
    - "traefik.http.routers.ta-web.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30
    - "traefik.http.routers.ta-web.middlewares=redirect@file" # <== This is a middleware to redirect to https
    - "traefik.http.routers.ta-secured.rule=Host(`test-api.devsetgo.com`)" # <== Your Domain Name for the https rule
    - "traefik.http.routers.ta-secured.entrypoints=web-secured" # <== Defining entrypoint for https, **ref: line 31
    - "traefik.http.routers.ta-secured.tls.certresolver=mytlschallenge" # <== Defining certsresolvers for https

    networks:
      - web
networks:
  web:
    external: true